{"remainingRequest":"C:\\Users\\Dor\\Desktop\\final-project\\FinalSprint2\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Dor\\Desktop\\final-project\\FinalSprint2\\src\\components\\taskGroup.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Dor\\Desktop\\final-project\\FinalSprint2\\src\\components\\taskGroup.vue","mtime":1595021472730},{"path":"C:\\Users\\Dor\\Desktop\\final-project\\FinalSprint2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Dor\\Desktop\\final-project\\FinalSprint2\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Dor\\Desktop\\final-project\\FinalSprint2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Dor\\Desktop\\final-project\\FinalSprint2\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgZHJhZ2dhYmxlIGZyb20gInZ1ZWRyYWdnYWJsZSI7DQppbXBvcnQgdGFza1ByZXZpZXcgZnJvbSAiLi90YXNrUHJldmlldy52dWUiOw0KaW1wb3J0IHt0YXNrR3JvdXBTZXJ2aWNlfSBmcm9tICcuLi9zZXJ2aWNlcy90YXNrLWdyb3VwLXNlcnZpY2UuanMnDQovLyBpbXBvcnQgY2FyZCBmcm9tICcuL2NhcmQudnVlJw0KZXhwb3J0IGRlZmF1bHQgew0KICBwcm9wczogWyJ0YXNrR3JvdXAiXSwNCiAgZGF0YSgpIHsNCiAgICByZXR1cm4gew0KICAgICAgLy8gdGFza0dyb3VwIDogdGhpcy50YXNrR3JvdXAsDQogICAgICBpc0FkZGluZzogZmFsc2UsDQogICAgICB0YXNrTW9kYWxTaG93bjogZmFsc2UgLA0KICAgICAgdGFza1RvU2F2ZTogew0KICAgICAgICBfaWQgOiB0YXNrR3JvdXBTZXJ2aWNlLm1ha2VJZCgpLA0KICAgICAgICB0aXRsZTogJycsDQogICAgICAgIGJnQ29sb3I6ICJncmVlbiIsDQogICAgICAgIHRhc2tHcm91cDogdGhpcy50YXNrR3JvdXANCiAgICAgICAgDQogICAgICB9DQogICAgfTsNCiAgfSwNCiAgY3JlYXRlZCgpIHsNCiAgICBjb25zb2xlLmxvZygidGFza3MgZ3JvdXAiLCB0aGlzLnRhc2tHcm91cCk7DQogIH0sDQogIGNvbXB1dGVkOiB7DQogICAgZHJhZ09wdGlvbnMoKSB7DQogICAgICByZXR1cm4gew0KICAgICAgICBhbmltYXRpb246IDIwMCwNCiAgICAgICAgZ3JvdXA6ICJkZXNjcmlwdGlvbiIsDQogICAgICAgIGRpc2FibGVkOiBmYWxzZSwNCiAgICAgICAgZ2hvc3RDbGFzczogImdob3N0Ig0KICAgICAgfTsNCiAgICB9DQogIH0sDQoNCiAgbWV0aG9kczogew0KICAgIG9wZW5UYXNrR3JvdXBNb2RhbCgpIHsNCiAgICAgIHRoaXMudGFza01vZGFsU2hvd24gPSAhdGhpcy50YXNrTW9kYWxTaG93bg0KICAgICAgY29uc29sZS5sb2coInRyaWdnZXJyciIpOw0KICAgIH0sDQogICBsb2coKSB7DQogICAgIGNvbnNvbGUubG9nKCd0cmlnZ2VycnInKTsNCiAgIH0sDQogICB1cGRhdGVCb2FyZEV2KCkgew0KICAgICBjb25zb2xlLmxvZygiZ3JvdXAiKQ0KICAgICBjb25zb2xlLmxvZygnZW1pdHRlZCcpOw0KICAgICB0aGlzLiRlbWl0ICgndXBkYXRlQm9hcmRFdicpDQogICB9LA0KICAgcmVtb3ZlVGFza0dyb3VwKCl7DQogICAgDQogICAgIHRoaXMuJGVtaXQgKCdyZW1vdmVUYXNrR3JvdXBFdicgLCB0aGlzLnRhc2tHcm91cCkNCiAgICAgY29uc29sZS5sb2coJ2J1dHRvbiB0cmlnZ2VyJywgdGhpcy50YXNrR3JvdXApOw0KICAgfSwNCiAgIGR1cGxpY2F0ZVRhc2tHcm91cCgpIHsNCiAgICAgdGhpcy4kZW1pdCAoJ2R1cGxpY2F0ZVRhc2tHcm91cEV2JyAsIHRoaXMudGFza0dyb3VwKQ0KICAgfSwNCg0KICAgYWRkVGFzaygpIHsNCiAgICAgIHRoaXMuaXNBZGRpbmcgPSB0cnVlOw0KICAgIH0sDQogICAgY2xvc2UoKSB7DQogICAgICB0aGlzLmlzQWRkaW5nID0gIXRoaXMuaXNBZGRpbmc7DQogICAgfSwNCiAgICBzYXZlTmV3VGFzaygpIHsNCiAgICAgIC8vIGlmICghdGhpcy50YXNrVG9TYXZlKSByZXR1cm47DQogICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCh7IHR5cGU6ICdzYXZlVGFzaycsIHRhc2s6IHRoaXMudGFza1RvU2F2ZSwgdGFza0dyb3VwOiB0aGlzLnRhc2tHcm91cCB9KTsNCiAgICAgIHRoaXMuaXNBZGRpbmcgPSAhdGhpcy5pc0FkZGluZzsNCiAgICB9DQogIH0sDQoNCiANCmNvbXBvbmVudHM6IHsNCiAgZHJhZ2dhYmxlLA0KICB0YXNrUHJldmlldw0KICAvLyBjYXJkDQp9DQp9DQo="},{"version":3,"sources":["taskGroup.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA","file":"taskGroup.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <!-- <div> -->\r\n    <div class=\"task-group flex column\">\r\n      <div class=\"relative flex space-between align-center\">\r\n        <p class=\"group-title\">{{taskGroup.title}}</p> \r\n        <button class=\"btn-edit\" @click=\"openTaskGroupModal\">...</button>\r\n        <div v-if=\"taskModalShown\" class=\"title-modal column \">\r\n           <div @click=\"isAdding = true , taskModalShown = false\"> Add new task </div>\r\n           <div @click=\"duplicateTaskGroup\"> Duplicate List</div>\r\n           <div @click=\"removeTaskGroup\"> Remove list</div>\r\n        </div>\r\n      </div>\r\n      <div class=\"tasks1\">\r\n    <!-- <h1> {{this.columns.columnTitle}}</h1> -->\r\n        <draggable   class=\"list-group\"\r\n        tag=\"div\"   \r\n        v-bind=\"dragOptions\" v-model=\"taskGroup.tasks\" group=\"people\" @start=\"drag=true\" @end=\"drag=false,updateBoardEv()\">\r\n          <div v-for=\"task in taskGroup.tasks\" :key=\"task.id\">\r\n            <task-preview :task=\"task\"></task-preview>\r\n          </div>\r\n        </draggable>\r\n\r\n        <button class=\"btn-add-task\" @click=\"addTask\">+ Add another card</button>\r\n        <div v-if=\"isAdding\">\r\n          <form @submit.prevent=\"saveNewTask\">\r\n            <input\r\n              type=\"text\"\r\n              v-model=\"taskToSave.title\"\r\n              placeholder=\"Enter a title for this card...\"\r\n            />\r\n            <button type=\"submit\">Add</button>\r\n          </form>\r\n          <button @click=\"close\">X</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  <!-- </div> -->\r\n</template>\r\n\r\n<script>\r\nimport draggable from \"vuedraggable\";\r\nimport taskPreview from \"./taskPreview.vue\";\r\nimport {taskGroupService} from '../services/task-group-service.js'\r\n// import card from './card.vue'\r\nexport default {\r\n  props: [\"taskGroup\"],\r\n  data() {\r\n    return {\r\n      // taskGroup : this.taskGroup,\r\n      isAdding: false,\r\n      taskModalShown: false ,\r\n      taskToSave: {\r\n        _id : taskGroupService.makeId(),\r\n        title: '',\r\n        bgColor: \"green\",\r\n        taskGroup: this.taskGroup\r\n        \r\n      }\r\n    };\r\n  },\r\n  created() {\r\n    console.log(\"tasks group\", this.taskGroup);\r\n  },\r\n  computed: {\r\n    dragOptions() {\r\n      return {\r\n        animation: 200,\r\n        group: \"description\",\r\n        disabled: false,\r\n        ghostClass: \"ghost\"\r\n      };\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    openTaskGroupModal() {\r\n      this.taskModalShown = !this.taskModalShown\r\n      console.log(\"triggerrr\");\r\n    },\r\n   log() {\r\n     console.log('triggerrr');\r\n   },\r\n   updateBoardEv() {\r\n     console.log(\"group\")\r\n     console.log('emitted');\r\n     this.$emit ('updateBoardEv')\r\n   },\r\n   removeTaskGroup(){\r\n    \r\n     this.$emit ('removeTaskGroupEv' , this.taskGroup)\r\n     console.log('button trigger', this.taskGroup);\r\n   },\r\n   duplicateTaskGroup() {\r\n     this.$emit ('duplicateTaskGroupEv' , this.taskGroup)\r\n   },\r\n\r\n   addTask() {\r\n      this.isAdding = true;\r\n    },\r\n    close() {\r\n      this.isAdding = !this.isAdding;\r\n    },\r\n    saveNewTask() {\r\n      // if (!this.taskToSave) return;\r\n      this.$store.dispatch({ type: 'saveTask', task: this.taskToSave, taskGroup: this.taskGroup });\r\n      this.isAdding = !this.isAdding;\r\n    }\r\n  },\r\n\r\n \r\ncomponents: {\r\n  draggable,\r\n  taskPreview\r\n  // card\r\n}\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n\r\n\r\n.title-modal{\r\n  width: 120px;\r\n  height: 85px;\r\n  position: absolute;\r\n  background-color: rgb(252, 250, 247);\r\n  justify-content: center;\r\n  right: 1%;\r\n  top: 95%;\r\n  div {\r\n    margin-top: 7px;\r\n    cursor: pointer;\r\n  }\r\n    \r\n}\r\n</style>\r\n"]}]}