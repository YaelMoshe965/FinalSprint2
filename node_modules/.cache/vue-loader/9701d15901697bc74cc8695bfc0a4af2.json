{"remainingRequest":"C:\\Users\\Dor\\Desktop\\final-project\\FinalSprint2\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Dor\\Desktop\\final-project\\FinalSprint2\\src\\components\\labelsModal.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\Users\\Dor\\Desktop\\final-project\\FinalSprint2\\src\\components\\labelsModal.vue","mtime":1595225128183},{"path":"C:\\Users\\Dor\\Desktop\\final-project\\FinalSprint2\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Dor\\Desktop\\final-project\\FinalSprint2\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\Dor\\Desktop\\final-project\\FinalSprint2\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\Dor\\Desktop\\final-project\\FinalSprint2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Dor\\Desktop\\final-project\\FinalSprint2\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoubGFiZWxzLW1vZGFsIHsKICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmY7CiAgICBwYWRkaW5nOiAxMHB4OwogICAgcG9zaXRpb246IGFic29sdXRlOwp9CgoubGFiZWxzLW1vZGFsIC5sYWJlbHMgLmxhYmVsIHsKICAgIG1hcmdpbi1ib3R0b206IDdweDsKfQoKLmxhYmVscy1tb2RhbCAubGFiZWxzIC5sYWJlbCBpbnB1dCB7CiAgICBib3JkZXI6IDA7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDsKfQoKLmxhYmVscy1tb2RhbCAubGFiZWxzIC5sYWJlbCBpbnB1dDpmb2N1cyB7CiAgICBvdXRsaW5lOiBub25lOwp9CgoubGFiZWwtbmFtZSB7CiAgICB3aWR0aDogMTAwJTsKfQoKLmxhYmVsIC5lZGl0IHsKICAgIGRpc3BsYXk6IG5vbmU7Cn0KCi5sYWJlbDpob3ZlciAuZWRpdCB7CiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7Cn0KCgoK"},{"version":3,"sources":["labelsModal.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmFA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA","file":"labelsModal.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div class=\"labels-modal\">\r\n      <div class=\"labels flex column\">\r\n          <div\r\n            class=\"label flex\"\r\n            v-for=\"label in labels\"\r\n            :key=\"label._id\"\r\n            :style=\"{ 'background-color': label.bgColor }\"\r\n            @click=\"labelClicked(label._id)\"\r\n        >\r\n            <div class=\"label-name\">\r\n                <input\r\n                    type=\"text\"\r\n                    v-model=\"editedLabelName\"\r\n                    v-if=\"editingLabelId == label._id\"\r\n                />\r\n                <span v-else>{{ label.name }}</span>\r\n            </div>\r\n            <div class=\"label-actions flex\">\r\n                <i class=\"edit fas fa-pencil-alt\" @click=\"setLabelUnderEditing(label._id)\"></i>\r\n                <i class=\"fa fa-check\" v-if=\"isInSelectedLabels(label._id)\"></i>\r\n            </div>\r\n        </div>\r\n      </div>\r\n      <button class=\"btn-save\" @click.prevent=\"saveLabelChanges()\">Save</button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    name: 'labels-modal',\r\n\r\n    props: ['task'],\r\n\r\n    data() {\r\n        return {\r\n            editingLabelId: null,\r\n            editedLabelName: null\r\n        }\r\n    },\r\n\r\n    computed: {\r\n        labels() {\r\n            return this.$store.getters.getLabels.sort((a, b) => a._id > b._id ? 1 : -1)\r\n        },\r\n\r\n        activeLabels() {\r\n            if (this.task) return this.task.labels;\r\n            return [];\r\n        }\r\n    },\r\n\r\n    methods: {\r\n        isInSelectedLabels(labelId) {\r\n            if (this.task.labels) return this.activeLabels.includes(labelId);\r\n        },\r\n\r\n        getLabel(labelId) {\r\n            return this.labels.find(label => label._id === labelId)\r\n        },\r\n\r\n        setLabelUnderEditing(labelId) {\r\n            this.editingLabelId = labelId;\r\n            this.editedLabelName = this.getLabel(labelId).name;\r\n        },\r\n\r\n        saveLabelChanges() {\r\n            const label = {\r\n                id: this.editingLabelId,\r\n                name: this.editedLabelName\r\n            };\r\n\r\n            this.$store.dispatch('updateLabel', {label});\r\n        },\r\n\r\n        labelClicked(labelId) {\r\n            this.$store.dispatch('toggleLabelInTask', {labelId, task: this.task});\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n    .labels-modal {\r\n        background-color: #ffffff;\r\n        padding: 10px;\r\n        position: absolute;\r\n    }\r\n\r\n    .labels-modal .labels .label {\r\n        margin-bottom: 7px;\r\n    }\r\n\r\n    .labels-modal .labels .label input {\r\n        border: 0;\r\n        background-color: transparent;\r\n    }\r\n\r\n    .labels-modal .labels .label input:focus {\r\n        outline: none;\r\n    }\r\n\r\n    .label-name {\r\n        width: 100%;\r\n    }\r\n\r\n    .label .edit {\r\n        display: none;\r\n    }\r\n\r\n    .label:hover .edit {\r\n        display: inline-block;\r\n    }\r\n\r\n\r\n\r\n</style>"]}]}