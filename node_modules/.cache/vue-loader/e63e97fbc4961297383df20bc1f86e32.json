{"remainingRequest":"C:\\Users\\Dor\\Desktop\\final-project\\FinalSprint2\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Dor\\Desktop\\final-project\\FinalSprint2\\src\\components\\taskGroup.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\Users\\Dor\\Desktop\\final-project\\FinalSprint2\\src\\components\\taskGroup.vue","mtime":1595001665892},{"path":"C:\\Users\\Dor\\Desktop\\final-project\\FinalSprint2\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Dor\\Desktop\\final-project\\FinalSprint2\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\Dor\\Desktop\\final-project\\FinalSprint2\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\Dor\\Desktop\\final-project\\FinalSprint2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Dor\\Desktop\\final-project\\FinalSprint2\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQoudGFza3MxIHsNCiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDE2OCwgMTY0LCAxNjQpOw0KICBwYWRkaW5nOiAxMHB4Ow0KICBvdmVyZmxvdzogYXV0bzsNCiAgZGlzcGxheTogYmxvY2s7DQogIGhlaWdodDogMSU7DQp9DQoudGFza3Mtd3JhcHBlciB7DQogIGRpc3BsYXk6IGZsZXg7DQogIGp1c3RpZnktY29udGVudDogc3BhY2UtZXZlbmx5Ow0KfQ0KLnRhc2tzLXdyYXBwZXIgLnRvZG8tZHJhZyB7DQogIGJhY2tncm91bmQtY29sb3I6IHJlZDsNCiAgb3BhY2l0eTogMTsNCn0NCi50b2RvIHsNCiAgd2lkdGg6IDE1MHB4Ow0KICBoZWlnaHQ6IDEwMHB4Ow0KICBtYXJnaW46IDEwcHg7DQp9DQoNCi5mbGlwLWxpc3QtbW92ZSB7DQogIG9wYWNpdHk6IDAuMjsNCiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuNXM7DQp9DQoubm8tbW92ZSB7DQogIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwczsNCn0NCi5naG9zdCB7DQogIG9wYWNpdHk6IDAuNTsNCiAgYmFja2dyb3VuZDogI2M4ZWJmYjsNCn0NCi5saXN0LWdyb3VwIHsNCiAgbWluLWhlaWdodDogMjBweDsNCn0NCi5saXN0LWdyb3VwLWl0ZW0gew0KICBjdXJzb3I6IG1vdmU7DQp9DQoubGlzdC1ncm91cC1pdGVtIGkgew0KICBjdXJzb3I6IHBvaW50ZXI7DQp9DQo="},{"version":3,"sources":["taskGroup.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"taskGroup.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"task-group flex column\">\r\n      <div class=\"flex space-between\">\r\n        {{taskGroup.title}}\r\n        <button>edit</button>\r\n      </div>\r\n      <div class=\"tasks1\">\r\n    <!-- <h1> {{this.columns.columnTitle}}</h1> -->\r\n        <draggable   class=\"list-group\"\r\n        tag=\"div\"   \r\n        v-bind=\"dragOptions\" v-model=\"taskGroup.tasks\" group=\"people\" @start=\"drag=true\" @end=\"drag=false,updateBoardEv()\">\r\n          <div v-for=\"task in taskGroup.tasks\" :key=\"task.id\">\r\n            <task-preview :task=\"task\"></task-preview>\r\n          </div>\r\n        </draggable>\r\n\r\n        <button @click=\"addTask\">Add Card</button>\r\n        <div v-if=\"isAdding\">\r\n          <form @submit.prevent=\"saveNewTask\">\r\n            <input\r\n              type=\"text\"\r\n              v-model=\"taskToSave.title\"\r\n              placeholder=\"Enter a title for this card...\"\r\n            />\r\n            <button type=\"submit\">Add</button>\r\n          </form>\r\n          <button @click=\"close\">X</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport draggable from \"vuedraggable\";\r\nimport taskPreview from \"./taskPreview.vue\";\r\n// import card from './card.vue'\r\nexport default {\r\n  props: [\"taskGroup\"],\r\n  data() {\r\n    return {\r\n      // taskGroup : this.taskGroup,\r\n      isAdding: false,\r\n      taskToSave: {\r\n        title: '',\r\n        bgColor: \"green\"\r\n      }\r\n    };\r\n  },\r\n  created() {\r\n    console.log(\"tasks group\", this.taskGroup);\r\n  },\r\n  computed: {\r\n    dragOptions() {\r\n      return {\r\n        animation: 200,\r\n        group: \"description\",\r\n        disabled: false,\r\n        ghostClass: \"ghost\"\r\n      };\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    log() {\r\n      console.log(\"triggerrr\");\r\n    },\r\n   log() {\r\n     console.log('triggerrr');\r\n   },\r\n   updateBoardEv() {\r\n     console.log(\"group\")\r\n     console.log('emitted');\r\n     this.$emit ('updateBoardEv')\r\n   },\r\n\r\n   addTask() {\r\n      this.isAdding = true;\r\n    },\r\n    close() {\r\n      this.isAdding = !this.isAdding;\r\n    },\r\n    saveNewTask() {\r\n      // if (!this.taskToSave) return;\r\n      this.$store.dispatch({ type: 'saveTask', task: this.taskToSave, taskGroup: this.taskGroup });\r\n      this.isAdding = !this.isAdding;\r\n    }\r\n  },\r\n\r\n \r\ncomponents: {\r\n  draggable,\r\n  taskPreview\r\n  // card\r\n}\r\n}\r\n</script>\r\n\r\n<style>\r\n.tasks1 {\r\n  background-color: rgb(168, 164, 164);\r\n  padding: 10px;\r\n  overflow: auto;\r\n  display: block;\r\n  height: 1%;\r\n}\r\n.tasks-wrapper {\r\n  display: flex;\r\n  justify-content: space-evenly;\r\n}\r\n.tasks-wrapper .todo-drag {\r\n  background-color: red;\r\n  opacity: 1;\r\n}\r\n.todo {\r\n  width: 150px;\r\n  height: 100px;\r\n  margin: 10px;\r\n}\r\n\r\n.flip-list-move {\r\n  opacity: 0.2;\r\n  transition: transform 0.5s;\r\n}\r\n.no-move {\r\n  transition: transform 0s;\r\n}\r\n.ghost {\r\n  opacity: 0.5;\r\n  background: #c8ebfb;\r\n}\r\n.list-group {\r\n  min-height: 20px;\r\n}\r\n.list-group-item {\r\n  cursor: move;\r\n}\r\n.list-group-item i {\r\n  cursor: pointer;\r\n}\r\n</style>\r\n"]}]}